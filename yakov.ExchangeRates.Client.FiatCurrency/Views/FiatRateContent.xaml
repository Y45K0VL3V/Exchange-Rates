<UserControl x:Class="yakov.ExchangeRates.Client.FiatCurrency.Views.FiatRateContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:yakov.ExchangeRates.Client.FiatCurrency.Views"
             xmlns:components="clr-namespace:yakov.ExchangeRates.Client.FiatCurrency.Styles"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:converters="clr-namespace:yakov.ExchangeRates.Client.FiatCurrency.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             MinWidth="800" MinHeight="350"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True" IsTabStop="False">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/yakov.ExchangeRates.Client.Core;component/Themes/DarkTheme.xaml"/>
                <ResourceDictionary Source="../Styles/Calendar.xaml"/>
                <ResourceDictionary Source="../Styles/DatePicker.xaml"/>
                <ResourceDictionary Source="../Styles/ComboBox.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <Style x:Key="OutlineButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="5">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border">
                                        <Setter.Value>
                                            <RadialGradientBrush GradientOrigin="0.5,0.5" Center="0.5,0.5">
                                                <GradientStop Color="Black"/>
                                                <GradientStop Color="White" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Control.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="00:00:00" Value="#5F24105F"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Control.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                    <EasingColorKeyFrame KeyTime="00:00:00" Value="#0024105F"/>
                                                </ColorAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Control.Background).(GradientBrush.GradientStops)[0].(GradientStop.Offset)">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.99"/>
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <PointAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Control.Background).(RadialGradientBrush.GradientOrigin)">
                                                    <EasingPointKeyFrame KeyTime="00:00:00" Value="0.5,0.5"/>
                                                </PointAnimationUsingKeyFrames>
                                                <PointAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Control.Background).(RadialGradientBrush.Center)">
                                                    <EasingPointKeyFrame KeyTime="00:00:00" Value="0.5,0.5"/>
                                                </PointAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Control.Background).(RadialGradientBrush.RadiusX)">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Control.Background).(RadialGradientBrush.RadiusY)">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Control.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="0.5"/>
                                                    <!--<EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>-->
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ItemsPanelTemplate x:Key="ComboBoxItemsPanel1">
                <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True" 
                                        VirtualizingPanel.VirtualizationMode="Recycling">
                </VirtualizingStackPanel>
            </ItemsPanelTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="90"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="75"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="1">
            <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                <StackPanel VerticalAlignment="Center">
                    <Label Content="Start date:" Foreground="{StaticResource titleColor1}" 
                           HorizontalAlignment="Center" FontSize="16"/>
                    <DatePicker CalendarStyle="{StaticResource calendar}"
                                Foreground="{StaticResource titleColor2}"
                                Padding="0"
                                DisplayDateStart="{Binding MinDate}"
                                DisplayDateEnd="{Binding MaxDate}"
                                Height="40"
                                VerticalContentAlignment="Center"
                                VerticalAlignment="Center"
                                SelectedDate="{Binding StartDate}"
                                IsTabStop="False">
                        <DatePicker.Background>
                            <LinearGradientBrush EndPoint="0,0" StartPoint="1,0.7">
                                <GradientStop Color="{StaticResource secondaryBackColor1}"/>
                                <GradientStop Color="{StaticResource secondaryBackColor2}" Offset="1"/>
                            </LinearGradientBrush>
                        </DatePicker.Background>
                    </DatePicker>
                </StackPanel>

                <StackPanel Margin="10,0,0,0" VerticalAlignment="Center">
                    <Label Content="End date:" Foreground="{StaticResource titleColor1}" 
                           HorizontalAlignment="Center" FontSize="16"/>
                    <DatePicker CalendarStyle="{StaticResource calendar}"
                                Foreground="{StaticResource titleColor2}"
                                Padding="0"
                                DisplayDateStart="{Binding MinDate}"
                                DisplayDateEnd="{Binding MaxDate}"
                                Height="40"
                                VerticalContentAlignment="Center"
                                VerticalAlignment="Center"
                                SelectedDate="{Binding EndDate}"
                                IsTabStop="False">
                        <DatePicker.Background>
                            <LinearGradientBrush EndPoint="0,0" StartPoint="1,0.7">
                                <GradientStop Color="{StaticResource secondaryBackColor1}"/>
                                <GradientStop Color="{StaticResource secondaryBackColor2}" Offset="1"/>
                            </LinearGradientBrush>
                        </DatePicker.Background>
                    </DatePicker>
                </StackPanel>

                <StackPanel Margin="10,0,0,0" VerticalAlignment="Center">
                    <Label Content="Currency:" Foreground="{StaticResource titleColor1}" 
                           HorizontalAlignment="Center" FontSize="16"/>
                    <ComboBox ItemsPanel="{DynamicResource ComboBoxItemsPanel1}" Width="100" IsEditable="True" Height="40" BorderThickness="0"
                              HorizontalContentAlignment="Left" VerticalContentAlignment="Center" FontSize="16"
                              IsTextSearchEnabled="True"
                              StaysOpenOnEdit="True"
                              ItemsSource="{Binding Currencies}"
                              Text="{Binding CurrencyShortName}"
                              IsTabStop="False"
                              Foreground="{StaticResource titleColor2}">
                    </ComboBox>
                </StackPanel>

                <Button x:Name="button" Style="{DynamicResource OutlineButton}" 
                        Height="70" Width="160"
                        Margin="30,0,0,0"
                        VerticalAlignment="Center"
                        FontSize="16" Foreground="{StaticResource titleColor2}"
                        BorderThickness="2"
                        Content="Get Rates"
                        Command="{Binding GetRatesCommand, ValidatesOnExceptions=true}"
                        IsTabStop="False">
                    <Button.BorderBrush>
                        <LinearGradientBrush EndPoint="0,0" StartPoint="1,0.7">
                            <GradientStop Color="{StaticResource secondaryBackColor1}"/>
                            <GradientStop Color="{StaticResource secondaryBackColor2}" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.BorderBrush>
                </Button>
            </StackPanel>
        </Border>

        <Border Grid.Row="1" 
                Grid.Column="1" Grid.ColumnSpan="2"
                CornerRadius="40"
                Margin="10">
            <Border.Background>
                <LinearGradientBrush EndPoint="0,0" StartPoint="1,0.7">
                    <GradientStop Color="{StaticResource secondaryBackColor1}"/>
                    <GradientStop Color="{StaticResource secondaryBackColor2}" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                
                <TextBlock HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding AdditionalChartInfo, FallbackValue='Some info', TargetNullValue='Price for N amount of target currency'}"
                           Foreground="{StaticResource titleColor2}"
                           FontSize="16">

                </TextBlock>

                <lvc:CartesianChart Margin="30,10,30,30"
                                    Grid.Row="1"
                                    Background="Transparent"
                                    Foreground="{StaticResource titleColor2}"
                                    ZoomMode="X"
                                    AnimationsSpeed="00:00:00.700"
                                    Series="{Binding Rates}"
                                    XAxes="{Binding XAxes}"
                                    YAxes="{Binding YAxes}"
                                    IsTabStop="False">
                </lvc:CartesianChart>
            </Grid>
        </Border>

        <Border Grid.Row="1" 
                Grid.Column="1" Grid.ColumnSpan="2"
                CornerRadius="40"
                Margin="10"
                Background="#7F000000"
                Visibility="{Binding IsRatesLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                d:Visibility="Collapsed">
            <components:LoadingSpinner/>
        </Border>

        <Border x:Name="border"
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                CornerRadius="10"
                Padding="0,0,0,20"
                Width="75"
                HorizontalAlignment="Left" VerticalAlignment="Stretch">
            <Border.Background>
                <LinearGradientBrush EndPoint="0,0" StartPoint="1,0.7">
                    <GradientStop Color="{StaticResource secondaryBackColor1}"/>
                    <GradientStop Color="{StaticResource secondaryBackColor2}" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <ToggleButton Grid.Row="0"
                              HorizontalAlignment="Left"
                              Height="30"
                              Margin="5,40,0,10"
                              Style="{DynamicResource SystemToggleButton}"
                              IsTabStop="False">
                    <ToggleButton.Content>
                        <Border Width="60"
                                    Margin="0,0,7,0">
                            <fa:IconImage Icon="LineChart"  
                                                Foreground="{StaticResource color3}"/>
                        </Border>
                    </ToggleButton.Content>

                    <ToggleButton.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Duration="00:00:00.1500000"
                                                         Storyboard.TargetProperty="(FrameworkElement.Width)"
                                                         To="220">

                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                         Duration="00:00:00.1500000"
                                                         Storyboard.TargetProperty="(FrameworkElement.Width)"
                                                         To="75">

                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ToggleButton.Triggers>

                </ToggleButton>

                <StackPanel Grid.Row="1"
                                Margin="0,20,0,0">

                    <RadioButton Style="{DynamicResource menuButton}"
                                 Tag="{DynamicResource color1}"
                                 IsChecked="{Binding IsFiatCurrency}"
                                 IsTabStop="False">
                        <StackPanel Orientation="Horizontal">
                            <fa:IconImage Icon="MoneyBill1" Style="{DynamicResource menuButtonIcon}"/>
                            <Label x:Name="label1" Content="Fiat currency"
                                   Style="{DynamicResource menuButtonText}"
                                   VerticalAlignment="Center"
                                   Margin="0,0,20,0"
                                   Visibility="Visible"
                                   Foreground="{DynamicResource plainTextColor3}"/>
                        </StackPanel>
                    </RadioButton>

                    <RadioButton Style="{DynamicResource menuButton}"
                                 Tag="{DynamicResource color2}"
                                 IsChecked="{Binding IsCryptoCurrency}"
                                 IsTabStop="False">
                        <StackPanel Orientation="Horizontal">
                            <fa:IconImage Icon="Ethereum" Style="{DynamicResource menuButtonIcon}"/>
                            <Label x:Name="label" Content="Crypto currency"
                                       Style="{DynamicResource menuButtonText}"
                                       VerticalAlignment="Center"
                                       Margin="0,0,20,0"
                                       Visibility="Visible"
                                       Foreground="{DynamicResource plainTextColor3}"/>
                        </StackPanel>
                    </RadioButton>
                </StackPanel>

            </Grid>

        </Border>

        <Border Grid.Column="2" 
                Margin="15" 
                Background="{StaticResource panelActiveColor}"
                BorderBrush="{StaticResource color4}"
                BorderThickness="1"
                Opacity="0.5"
                CornerRadius="5"
                Visibility="{Binding ErrorMessage, Converter={StaticResource NullToVisibilityConverter}}">
            <TextBlock Margin="5"
                       Height="auto" Width="auto"
                       Text="{Binding ErrorMessage, FallbackValue=Default}"
                       TextWrapping="Wrap"
                       FontSize="13"
                       Foreground="{StaticResource color4}"
                       VerticalAlignment="Center" HorizontalAlignment="Center">
                
            </TextBlock>
        </Border>
        
    </Grid>
</UserControl>
